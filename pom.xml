<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 此部分不能使用 <properties/...> 中的元素来取代，必须直接给出具体的内容  -->
    <groupId>org.wangpai.calculator</groupId>
    <artifactId>calculator-windows</artifactId>
    <version>3.3</version>
    <packaging>pom</packaging>

    <modules>
        <module>calculator-entrance</module>
        <module>calculator-ui</module>
        <module>calculator-backend</module>
        <module>calculator-exception</module>
        <module>calculator-ui-depended</module>

    </modules>

    <properties>
        <project_version>3.3</project_version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <junit.version>5.8.0-M1</junit.version>
        <projectlombok.version>1.18.20</projectlombok.version>
        <openjfx.version>17-ea+11</openjfx.version>
        <spring.version>5.2.9.RELEASE</spring.version>
        <slf4j.version>1.7.13</slf4j.version>

        <mainClass>org.wangpai.calculator.CalculatorApplication</mainClass>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wangpai.calculator</groupId>
                <artifactId>calculator-entrance</artifactId>
                <version>${project_version}</version>
            </dependency>
            <dependency>
                <groupId>org.wangpai.calculator</groupId>
                <artifactId>calculator-ui</artifactId>
                <version>${project_version}</version>
            </dependency>
            <dependency>
                <groupId>org.wangpai.calculator</groupId>
                <artifactId>calculator-backend</artifactId>
                <version>${project_version}</version>
            </dependency>
            <dependency>
                <groupId>org.wangpai.calculator</groupId>
                <artifactId>calculator-exception</artifactId>
                <version>${project_version}</version>
            </dependency>
            <dependency>
                <groupId>org.wangpai.calculator</groupId>
                <artifactId>calculator-ui-depended</artifactId>
                <version>${project_version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${projectlombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- SLF4J 核心 JAR 包 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 设置 SLF4J 与之绑定的日志包 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${openjfx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${openjfx.version}</version>
            </dependency>
            <!-- 提供注解 @Controller 等 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>

            <!-- 此插件必须放在父 POM 中  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <!--
                    执行本插件的方法为，在主目录下执行如下命令：
                    mvn package assembly:single

                    对于 IntelliJ IDEA，生成的 JAR 包位于每个模块下的文件夹 target
                    -->
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 此处 IntelliJ IDEA 可能会报红，这是正常现象  -->
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- 配置程序运行入口所在的类 -->
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <!-- 设置 JAR 包输出目录 -->
                    <outputDirectory>${project.build.directory}/#maven-assembly-plugin</outputDirectory>
                    <!-- 设置打包后的 JAR 包的目录结构为默认 -->
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>

            <!--
            此插件是用于拷贝该模块的资源文件指指定目录。
            但生成的资源文件只包含本模块的资源文件，不包括其依赖的其它模块的资源文件
            此插件可在生命周期 package 中被执行。
            此插件往往与插件 maven-jar-plugin、maven-dependency-plugin 一起使用

            此插件暂时没起到什么作用，留着以后备用
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- 设置此插件执行的阶段，可更改为其它阶段 -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!-- 设置资源文件输出目录 -->
                            <outputDirectory>${project.build.directory}/#maven-resources-plugin</outputDirectory>
                            <resources>
                                <resource>
                                    <!-- 设置原资源文件所在目录 -->
                                    <directory>src/main/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>